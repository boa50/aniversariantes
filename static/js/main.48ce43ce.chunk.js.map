{"version":3,"sources":["serviceWorker.js","utils/DateUtils.js","assests/aniversariantes.js","services/Aniversariantes.js","components/Header.js","components/ListaAniversariantes.js","components/TrocaMes.js","pages/App.js","pages/NotFound.js","index.js"],"names":["Boolean","window","location","hostname","match","DateUtils","getMonthNameFromNumber","mesNumero","getMesAtual","Date","getMonth","isDataDoMes","data","mesData","substring","Number","getMesesNumeros","getDiaFromString","aniversariantes","pessoa","dia","AniversariantesService","ListaAniversariantes","ListaAniversariantesMes","filter","aniversariante","Header","className","href","id","class","imprimeListaVazia","imprimeListaPreenchida","linhas","ordenarPorDia","map","linha","index","key","List","_tail","array","sort","a","b","this","_aniversariantes","props","length","Component","TrocaMes","trocaMes","mes","listener","trocaMesAnterior","isMesInicial","_mes","trocaMesPosterior","isMesFinal","isMesAtual","botaoSeta","desabilita","executa","icone","onClick","botaoMesAnterior","botaoMesPosterior","botoesMeses","value","App","trocaMesListener","mesNovo","atualizaInformacoes","setState","autlizaListaAniversariantes","state","NotFound","ReactDOM","render","path","exact","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48ce43ce.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const DateUtils = {\n    getMonthNameFromNumber(mesNumero) {\n        switch (mesNumero) {\n            case 1:\n                return 'Janeiro';\n            case 2:\n                return 'Fevereiro';\n            case 3:\n                return 'Março';\n            case 4:\n                return 'Abril';\n            case 5:\n                return 'Maio';\n            case 6:\n                return 'Junho';\n            case 7:\n                return 'Julho';\n            case 8:\n                return 'Agosto';\n            case 9:\n                return 'Setembro';\n            case 10:\n                return 'Outubro';\n            case 11:\n                return 'Novembro';\n            case 12:\n                return 'Dezembro';\n            default:\n                return;\n        }\n    },\n\n    getMesAtual() {\n        const data = new Date();\n        \n        return data.getMonth() + 1; \n    },\n\n    isDataDoMes(data, mesNumero) {\n        const mesData = data.substring(3,5);\n        \n        return Number(mesData) === Number(mesNumero);\n    },\n\n    getMesesNumeros() {\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    },\n\n    getDiaFromString(data) {\n        return data.substring(0,2);\n    }\n}\n\nexport default DateUtils;","const aniversariantes = \n    [\n        {\n            pessoa: 'Kinka',\n            dia: '29/03'\n        },\n        {\n            pessoa: 'Ruth',\n            dia: '11/09'\n        },\n        {\n            pessoa: 'Raquel',\n            dia: '12/11'\n        },\n        {\n            pessoa: 'Bruno',\n            dia: '14/10'\n        },\n        {\n            pessoa: 'Flávia',\n            dia: '19/10'\n        },\n        {\n            pessoa: 'Milla',\n            dia: '04/10'\n        },\n        {\n            pessoa: 'Carmem',\n            dia: '01/10'\n        },\n        {\n            pessoa: 'Daisy',\n            dia: '03/10'\n        },\n        {\n            pessoa: 'Lucio Jr.',\n            dia: '08/10'\n        },\n        {\n            pessoa: 'Mamãe Iracy(in memorian)',\n            dia: '08/10'\n        },\n        {\n            pessoa: 'Mirella',\n            dia: '21/10'\n        },\n        {\n            pessoa: 'Lucas Alexandre(Neto de Carlinhos)',\n            dia: '01/11'\n        },\n        {\n            pessoa: 'Pedrinho Filho',\n            dia: '03/11'\n        },\n        {\n            pessoa: 'Melissa(Neta de Carlinhos)',\n            dia: '07/11'\n        },\n        {\n            pessoa: 'Fabiana',\n            dia: '09/11'\n        },\n        {\n            pessoa: 'Rodrigo',\n            dia: '18/11'\n        },\n        {\n            pessoa: 'Vinicius(Neto de Carlinhos)',\n            dia: '24/11'\n        },\n        {\n            pessoa: 'Tarcisio',\n            dia: '25/11'\n        },\n        {\n            pessoa: 'Daniela',\n            dia: '26/11'\n        }\n    ]\n\nexport default aniversariantes;","import DateUtils from '../utils/DateUtils';\nimport aniversariantes from '../assests/aniversariantes';\n\nconst AniversariantesService = {\n    ListaAniversariantes: () => {\n        return aniversariantes\n    },\n\n    ListaAniversariantesMes: mesNumero => {\n        return AniversariantesService.ListaAniversariantes()\n            .filter(aniversariante => {\n                return DateUtils.isDataDoMes(aniversariante.dia, mesNumero);\n            });\n    }\n}\nexport default AniversariantesService;","import React from 'react';\nimport '../assests/custom-css.css';\n\nfunction Header() {\n    return (\n        <nav>\n            <div className=\"nav-wrapper\">\n                <a href=\"/\" id=\"logo\" className=\"brand-logo\">\n                    <i class=\"material-icons\">cake</i>\n                    Aniversariantes\n                </a>\n            </div>\n        </nav>\n    );\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { List } from 'immutable';\nimport DateUtils from '../utils/DateUtils';\n\nclass ListaAniversariantes extends Component {\n    imprimeListaVazia = () => <h5> Sem aniversariantes no mês </h5>\n\n    imprimeListaPreenchida = aniversariantes => {\n        const aniversariantesOrdenados = this.ordenarPorDia(aniversariantes);\n        \n        const linhas = aniversariantesOrdenados.map((linha, index) => {\n            return (\n                <tr key={index}>\n                    <td>{linha.pessoa}</td>\n                    <td>{DateUtils.getDiaFromString(linha.dia)}</td>\n                </tr>\n            );\n        });\n\n        return (\n            <table className=\"centered hightlight\">\n                <tr>\n                    <th>Pessoa</th>\n                    <th>Dia</th>\n                </tr>\n                {linhas}\n            </table>\n        );\n    }\n\n    ordenarPorDia = aniversariantes => {\n        const listaAniversariantesOrdenada = new List(aniversariantes);\n\n        return listaAniversariantesOrdenada._tail.array.sort((a, b) => {\n            const diaA = DateUtils.getDiaFromString(a.dia);\n            const diaB = DateUtils.getDiaFromString(b.dia);\n            return diaA < diaB ? -1 : 1;\n        });\n    }\n    \n    render() {\n        this._aniversariantes = this.props.aniversariantes;\n\n        if (this._aniversariantes.length === 0) {\n            return this.imprimeListaVazia();\n        } else {\n            return this.imprimeListaPreenchida(this._aniversariantes);\n        }\n    }\n}\n\nexport default ListaAniversariantes;","import React, { Component } from 'react';\nimport DateUtils from '../utils/DateUtils';\n\nclass TrocaMes extends Component {\n    trocaMes = mes => {\n        this.props.listener(mes);\n    }\n\n    trocaMesAnterior = () => {\n        if (!this.isMesInicial()) {\n            this.trocaMes(this._mes - 1);\n        }\n    }\n\n    trocaMesPosterior = () => {\n        if (!this.isMesFinal()) {\n            this.trocaMes(this._mes + 1);\n        }\n    }\n\n    isMesInicial = () => {\n        return this._mes === 1;\n    }\n\n    isMesFinal = () => {\n        return this._mes === 12;\n    }\n\n    isMesAtual = mes => {\n        return mes === this._mes;\n    }\n\n    botaoSeta = (desabilita, executa, icone) => {\n        return (\n            <li className={desabilita() ? \"disabled\" : \"waves-effect\"}\n                onClick={executa}>\n                <a href=\"#!\">\n                    <i class=\"material-icons\">{icone}</i>\n                </a>\n            </li>\n        );\n    }\n\n    botaoMesAnterior = () => {\n        return this.botaoSeta(\n            this.isMesInicial, this.trocaMesAnterior, \"chevron_left\");\n    }\n\n    botaoMesPosterior = () => {\n        return this.botaoSeta(\n            this.isMesFinal, this.trocaMesPosterior, \"chevron_right\");\n    }\n\n    botoesMeses = () => {\n        const meses = DateUtils.getMesesNumeros();\n        \n        return (\n            meses.map((value) => {\n                return (\n                    <li className={this.isMesAtual(value) ? \"active\" : \"waves-effect\"}\n                        onClick={() => this.trocaMes(value)}>\n                        <a href=\"#!\">{value}</a>\n                    </li>\n                )\n            })\n        )\n    }\n\n    render() {\n        this._mes = this.props.mes;\n\n        return (\n            <div className=\"center\">\n                <ul className=\"pagination\">\n                    {this.botaoMesAnterior()}\n                    {this.botoesMeses()}\n                    {this.botaoMesPosterior()}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default TrocaMes;","import React, { Component, Fragment } from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'materialize-css/dist/js/materialize.min.js';\nimport DateUtils from '../utils/DateUtils';\nimport AniversariantesService from '../services/Aniversariantes';\nimport Header from '../components/Header';\nimport ListaAniversariantes from '../components/ListaAniversariantes';\nimport TrocaMes from '../components/TrocaMes';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            aniversariantes: [],\n            mes: 0\n        }\n    }\n\n    componentDidMount() {\n        const mes = DateUtils.getMesAtual();\n        this.atualizaInformacoes(mes);\n    }\n\n    trocaMesListener = mesNovo => {\n        this.atualizaInformacoes(mesNovo);\n    }\n\n    atualizaInformacoes = mes => {\n        this.setState({ mes });\n        this.autlizaListaAniversariantes(mes);\n    }\n\n    autlizaListaAniversariantes = mes => {\n        const aniversariantes = AniversariantesService.ListaAniversariantesMes(mes);\n        this.setState({ aniversariantes });\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Header />\n                <div className=\"container\">\n                    <h2 className=\"center\">{DateUtils.getMonthNameFromNumber(this.state.mes)}</h2>\n                    <TrocaMes \n                        listener={this.trocaMesListener} \n                        mes={this.state.mes} />\n                    <ListaAniversariantes aniversariantes={this.state.aniversariantes} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default App;","import React, { Fragment } from 'react';\nimport Header from '../components/Header';\n\nfunction NotFound() {\n    return (\n        <Fragment>\n            <Header />\n            <div className=\"container\">\n                <h1>Página Não Encontrada</h1>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default NotFound;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport App from './pages/App';\n// import Cadastro from './cadastro/pages/Cadastro';\nimport NotFound from './pages/NotFound';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Switch>\n            <Route path='/' exact={true} component={App} />\n            {/* <Route path='/cadastro' component={Cadastro} /> */}\n            <Route component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}